{"version":3,"sources":["components/NeighborhoodMap.js","components/CityMap.js","App.js","reportWebVitals.js","index.js"],"names":["NeighborhoodMap","props","line","neighborhoodInfo","geometry","type","coordinates","map","el","idx","className","d","fill","stroke","CityMap","height","document","documentElement","clientHeight","width","xScale","d3","domain","range","yScale","x","y","id","NTA","features","neighborhood","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"8oovHAEaA,EAAkB,SAAAC,GAC3B,IAAOC,EAAQD,EAARC,KACP,EAA4BD,EAAME,iBAAiBC,SAA5CC,EAAP,EAAOA,KAAMC,EAAb,EAAaA,YAEb,MAAa,iBAATD,EAAgCC,EAAYC,KAAI,SAACC,EAAIC,GACrD,OACI,mBAAGC,UAAU,eAAb,SACI,sBACIC,EAAGT,EAAKM,EAAG,IACXI,KAAK,QACLC,OAAO,WAJkBJ,MAUrC,mBAAGC,UAAU,eAAb,SACA,sBACIC,EAAGT,EAAKI,EAAY,IACpBM,KAAK,QACLC,OAAO,aClBNC,EAAU,SAACb,GAEpB,IAAMc,EAASC,SAASC,gBAAgBC,aAClCC,EAAiB,cAATJ,EAERK,EAASC,MAEdC,OAAO,EAAE,kBAAmB,mBAC5BC,MAAM,CAAC,EAAGJ,IAEPK,EAASH,MAEZC,OAAO,CAAC,iBAAkB,mBAC1BC,MAAM,CAACR,EAAQ,IAEVb,EAAOmB,MAEZI,GAAE,SAAAd,GACD,OAAOS,EAAOT,EAAE,OAEjBe,GAAE,SAAAf,GACD,OAAOa,EAAOb,EAAE,OAGlB,OACI,qBAAKgB,GAAG,iBAAR,SACI,qBACIR,MAAOA,EACPJ,OAAQA,EACRY,GAAG,aAHP,SAKKC,EAAIC,SAAStB,KAAI,SAACuB,EAAcrB,GAAf,OACd,cAAC,EAAD,CACIP,KAAMA,EACNC,iBAAkB2B,GACbrB,WC1BdsB,MAVf,WACE,OACE,qBAAKrB,UAAU,MAAf,SACE,wBAAQA,UAAU,aAAlB,SACI,cAAC,EAAD,SCKKsB,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,8BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEF3B,SAAS4B,eAAe,SAM1BZ,M","file":"static/js/main.a2cea3da.chunk.js","sourcesContent":["\n\nexport const NeighborhoodMap = props => {\n    const {line} = props\n    const {type, coordinates} = props.neighborhoodInfo.geometry\n\n    if (type === 'MultiPolygon') return coordinates.map((el, idx) => {\n        return (\n            <g className=\"neighborhood\" key={idx}>\n                <path \n                    d={line(el[0])}\n                    fill='green'\n                    stroke='white'\n                ></path>\n            </g>\n        )\n    })\n     else return (\n        <g className=\"neighborhood\">\n        <path \n            d={line(coordinates[0])}\n            fill='green'\n            stroke=\"white\"\n        ></path>\n    </g>\n    )\n}\n","import * as d3 from 'd3'\nimport NTA from '../NTA.json'\nimport {NeighborhoodMap} from './NeighborhoodMap'\n\nexport const CityMap = (props) => {\n\n    const height = document.documentElement.clientHeight\n    const width = height * 1.32465263323\n\n    const xScale = d3\n    .scaleLinear()\n    .domain([-74.2555928790719, -73.7000104153247])\n    .range([0, width])\n\n  const yScale = d3\n    .scaleLinear()\n    .domain([40.4961236003829, 40.9155410761847])\n    .range([height, 0])\n\n    const line = d3\n    .line()\n    .x(d => {\n      return xScale(d[0])\n    })\n    .y(d => {\n      return yScale(d[1])\n    })\n\n    return (\n        <div id='CityMapWrapper'>\n            <svg\n                width={width}\n                height={height}\n                id=\"CityMapSVG\"\n            >\n                {NTA.features.map((neighborhood, idx) => (\n                    <NeighborhoodMap\n                        line={line}\n                        neighborhoodInfo={neighborhood}\n                        key={idx}\n                    />\n                ))}    \n            </svg>\n        </div>\n    )\n}\n\n","import './App.css';\nimport {CityMap} from './components/CityMap'\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n          <CityMap />\n      </header>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}